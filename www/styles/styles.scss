@import '../bower_components/bootstrap-sass-official/vendor/assets/stylesheets/bootstrap';
@font-face {
    font-family: 'Glyphicons Halflings';
    src: url('./fonts/lyphicons-halflings-regular.eot') format('embedded-opentype');
    src: url('./fonts/glyphicons-halflings-regular.svg') format('svg');
    src: url('./fonts/glyphicons-halflings-regular.ttf') format('truetype');
    src: url('./fonts/glyphicons-halflings-regular.woff') format('woff');
}
/*****MIXINS AND FUNCTIONS****/
/*CUSTOM BACKGROUND IMAGE*/

@mixin bgimage($path,
$size,
$position,
$repeat) {
    background-image: url($path);
    background-size: $size;
    background-position: $position;
    background-repeat: $repeat;
}
/*TARGET / BASE UNIT CONVERSION*/

@function toUnit($targetUnit,
$base,
$unit) {
    $result: $targetUnit / $base;
    @if $unit "em" {
        @return $result+em;
    }
    @else {
        @return $result * 100%;
    }
}
/*END OF MIXINS AND FUNCTIONS*/
/************************/
/*        FONTS         */
/************************/
/*ROBOTO THIN*/

@font-face {
    font-family: 'Futura';
    font-style: normal;
    font-weight: 500;
    src: local('Futura Medium'), local('Futura-Medium'), url('./fonts/FuturaStd-Medium.otf') format('opentype');
}

@font-face {
    font-family: 'Futura';
    font-style: normal;
    font-stretch: condensed;
    font-weight: 700;
    src: local('Futura Condensed Extra Bold'), local('Futura-Condensed-Extra-Bold'), url('./fonts/FuturaStd-CondensedExtraBd.otf') format('opentype');
}

@font-face {
    font-family: 'Roboto';
    font-style: normal;
    font-weight: 200;
    src: local('Roboto Thin'), local('Roboto-Thin'), url('./fonts/Roboto-Thin.ttf') format('truetype');
}

@font-face {
    font-family: 'Roboto';
    font-style: italic;
    font-weight: 200;
    src: local('Roboto ThinItalic'), local('Roboto-ThinItalic'), url('./fonts/Roboto-ThinItalic.ttf') format('truetype');
}

@font-face {
    font-family: 'Roboto';
    font-style: normal;
    font-weight: 300;
    src: local('Roboto Light'), local('Roboto-Light'), url('./fonts/Roboto-Light.ttf') format('truetype');
}

@font-face {
    font-family: 'Roboto';
    font-style: italic;
    font-weight: 300;
    src: local('Roboto Italic'), local('Roboto-Italic'), url('./fonts/Roboto-Italic.ttf') format('truetype');
}

@font-face {
    font-family: 'Roboto';
    font-style: normal;
    font-weight: 400;
    src: local('Roboto Regular'), local('Roboto-Regular'), url('./fonts/Roboto-Regular.ttf') format('truetype');
}

@font-face {
    font-family: 'Roboto';
    font-style: normal;
    font-weight: 600;
    src: local('Roboto Bold'), local('Roboto-Bold'), url('./fonts/Roboto-Bold.ttf') format('truetype');
}

@font-face {
    font-family: 'Glyphicons Halflings';
    src: url('./fonts/glyphicons-halflings-regular.eot') format('embedded-opentype');
    src: url('./fonts/glyphicons-halflings-regular.svg') format('svg');
    src: url('./fonts/glyphicons-halflings-regular.ttf') format('truetype');
    src: url('./fonts/glyphicons-halflings-regular.woff') format('woff');
}
/*****Alena style*********/

#globalWrapper {
    height: 100%;
}

.myfade {
    height: 100%;
}

body.iOS {
    //margin-top: 20px;
}
/*****Alena style end*********/

* {
    box-sizing: border-box;
}

html,
body {
    height: 100%;
}

body {
    -webkit-user-select: none !important;
    -webkit-touch-callout: none;
    overflow: hidden;
    font: normal 100% 'Ubuntu', sans-serif;
    font-weight: 400;
}

* {
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
/* Loading animation */

#loadingDiv {
    position: fixed;
    top: 0;
    left: 0;
    margin: 0;
    height: 100%;
    width: 100%;
    background: url(images/pattern.png)repeat center;
    background-color: #000;
    z-index: 9999;
    opacity: 1 !important;
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
    background-size: 70px;
}

h1,
h2,
h3,
h4,
h5,
h6,
.h1,
.h2,
.h3,
.h4,
.h5,
.h6 {
    font-family: 'Ubuntu', sans-serif;
}